//
//  main.cpp
//  Test2
//
//  Created by Apple on 2020/11/19.
//
//
//  GetAndSet.cpp
//  Front end development
//
//  Created by QTN on 2020/11/19.
//  @Copyright Reserved, QTN, 2020
//

#include <stdio.h>
#include<iostream>
#include<iomanip>
#include <string>
using namespace std;
class Piece{
public:
    Piece(int player,int position[2]){
        this->player=player;
        this->position[0]=position[0];
        this->position[1]=position[1];
    }
    int getPlayer(){
        return player;
    }
    int* getPosition(){
        return position;
    }
private:
    int player;
    int position [2];
    
    
};
class Board {
public:
    Board(){
        for (int i=0;i<2;i++){
            for (int j=0;j<7;j++){
                for (int z=0;z<6;z++){
                    full[i][j][z]=false;
                }
                
            }
        }
        
    }
    void ChangeBoard(Piece piece){
        full[piece.getPlayer()][piece.getPosition()[0]][piece.getPosition()[1]]=true;
    }
    bool getFull(int x, int y, int z){
        return full[x][y][z];
    }
    void Setter (Piece piece){
        ChangeBoard(piece);
    }
    string * Getter(){
        string s[92];
         for (int q=0;q<92;q++){
         
                    s[q]="\0";
             
        }
          for (int i=0;i<2;i++){
            for (int j=0;j<7;j++){
                for (int z=0;z<6;z++){
                    if (full[i][j][z]==true){
                   
                        s[u]+=to_string(i);
                        s[u]+=" , ";
                        s[u]+=to_string(j);
                        s[u]+=" , ";
                        s[u]+=to_string(z);
                        u++;
                    }
                }
                
            }
        }
        return s;
    }
   
   int getLength(){
       return u;
   }
private:
    bool full [2][7][6];
                int u=0;

};

int main()
{
    Board b=Board();
    int p [2] ={0,0};
    int p1 [2]= {1,1};
    int p2 [2]={3,3};
    Piece a=Piece(1,p);
    Piece c=Piece(1,p1);
    Piece d=Piece(0,p2);
    b.Setter(a);
    b.Setter(c);
    b.Setter(d);
    for (int i=0;i<2;i++){
            cout<<"Player "<<i;
        for (int j=0;j<7;j++){
            cout<<endl;
            for (int z=0;z<6;z++){
                cout <<b.getFull(i,j,z)<<" ";
                    
            }
            
        }
       cout<<endl;
        
    }
    cout<<endl;
    
    string *t=nullptr;
    t=b.Getter();
    for (int i=0;i<b.getLength();i++){
    
    cout <<t[i]<<endl;
    }
}
